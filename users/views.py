from django.shortcuts import render, redirect, get_object_or_404
from django.core.mail import EmailMultiAlternatives  # –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML-–ø–∏—Å–µ–º
from django.template.loader import render_to_string  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ø–∏—Å—å–º–∞
from django.conf import settings
from django.contrib import messages
from .forms import RegistrationForm
from .models import CustomUser


def register_view(request):
    if request.method == "POST":
        form = RegistrationForm(request.POST)
        if form.is_valid():
            user = form.save(commit=False)
            user.is_active = False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –¥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            user.save()

            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è e-mail
            confirmation_link = request.build_absolute_uri(
                f"/users/confirm/{user.verification_code}/"
            )

            # üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-—Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∏—Å—å–º–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞
            html_content = render_to_string(
                "email/confirmation_email.html",
                {
                    "user": user,
                    "confirmation_link": confirmation_link,
                },
            )

            # üîπ –†–µ–∑–µ—Ä–≤–Ω—ã–π —Ç–µ–∫—Å—Ç (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ HTML –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è)
            text_content = (
                f"–ü—Ä–∏–≤–µ—Ç! –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ: {confirmation_link}"
            )

            # üîπ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–∏—Å—å–º–∞
            msg = EmailMultiAlternatives(
                subject="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                body=text_content,  # —Ç–µ–∫—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å
                from_email=settings.DEFAULT_FROM_EMAIL,
                to=[user.email],
            )

            # üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ HTML-–≤–µ—Ä—Å–∏–∏ –ø–∏—Å—å–º–∞
            msg.attach_alternative(html_content, "text/html")

            # üîπ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞
            try:
                msg.send()
                messages.success(
                    request, "–ü–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ e-mail."
                )
            except Exception as e:
                messages.error(request, f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞: {str(e)}")

            return redirect("users:login")
    else:
        form = RegistrationForm()

    return render(request, "users/register.html", {"form": form})


def confirm_email(request, code):
    user = get_object_or_404(CustomUser, verification_code=code)

    if user.is_active:
        messages.info(request, "E-mail —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω.")
        return redirect("users:login")

    user.is_active = True
    user.verification_code = None  # –û–±–Ω—É–ª—è–µ–º –∫–æ–¥ (–µ—Å–ª–∏ –ø–æ–ª–µ –¥–æ–ø—É—Å–∫–∞–µ—Ç null/blank)
    user.save()

    messages.success(request, "E-mail –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω, –º–æ–∂–µ—à—å –≤–æ–π—Ç–∏.")
    return redirect("users:login")


def home_view(request):
    return render(request, "users/home.html")
